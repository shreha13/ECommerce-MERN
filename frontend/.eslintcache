[{"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\index.js":"1","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\App.js":"2","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Header.js":"3","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Footer.js":"4","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\screens\\HomeScreen.js":"5","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\products.js":"6","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Product.js":"7","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Rating.js":"8","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\screens\\ProductScreen.js":"9"},{"size":462,"mtime":1606910754306,"results":"10","hashOfConfig":"11"},{"size":745,"mtime":1606985264292,"results":"12","hashOfConfig":"11"},{"size":1112,"mtime":1606985308857,"results":"13","hashOfConfig":"11"},{"size":333,"mtime":1606911029905,"results":"14","hashOfConfig":"11"},{"size":737,"mtime":1606997870027,"results":"15","hashOfConfig":"11"},{"size":2486,"mtime":1606986650668,"results":"16","hashOfConfig":"11"},{"size":969,"mtime":1606913198405,"results":"17","hashOfConfig":"11"},{"size":1615,"mtime":1606913405765,"results":"18","hashOfConfig":"11"},{"size":2375,"mtime":1606997730785,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ns0ufl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\index.js",[],["42","43"],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\App.js",[],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Header.js",[],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Footer.js",[],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\screens\\HomeScreen.js",["44"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport axios from \"axios\";\r\n\r\nconst HomeScreen = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const response = await axios.get(\"/api/products\");\r\n    const products = response.data.products;\r\n    setProducts(products);\r\n  }, []);\r\n  \r\n  return (\r\n    <Fragment>\r\n      <h1>LATEST PRODUCTS</h1>\r\n      <Row>\r\n        {products.map((i) => (\r\n          <Col key={i._id} lg={4} sm={12} md={6} xl={3}>\r\n            <Product product={i} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\GitHub\\ECommerce-MERN\\frontend\\src\\products.js",[],["45","46"],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Product.js",[],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\components\\Rating.js",[],"D:\\GitHub\\ECommerce-MERN\\frontend\\src\\screens\\ProductScreen.js",["47"],"import Axios from \"axios\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Image, ListGroup, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const [product, setProduct] = useState({});\r\n\r\n  useEffect(async () => {\r\n    const response = await Axios.get(\"/api/products/\" + match.params.id);\r\n\r\n    const product = response.data.product;\r\n\r\n    setProduct(product);\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        GO BACK\r\n      </Link>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>\r\n                    <strong>{product.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={product.countInStock === 0}\r\n                >\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":9,"column":13,"nodeType":"54","endLine":13,"endColumn":4},{"ruleId":"48","replacedBy":"55"},{"ruleId":"50","replacedBy":"56"},{"ruleId":"52","severity":1,"message":"53","line":10,"column":13,"nodeType":"54","endLine":16,"endColumn":4},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["57"],["58"],"no-global-assign","no-unsafe-negation"]