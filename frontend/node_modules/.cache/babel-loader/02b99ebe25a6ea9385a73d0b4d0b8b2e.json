{"ast":null,"code":"import Axios from \"axios\";\nimport { DELETE_USER_FAIL, DELETE_USER_SUCCESS, GET_USER_LOAD, GET_USER_FAIL, GET_USER_SUCCESS, GET_USERS_FAIL, GET_USERS_LOAD, GET_USERS_SUCCESS } from \"./types\";\nexport const getUsers = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_USERS_LOAD\n    });\n    const auth = getState().auth;\n\n    try {\n      const token = auth.user.token;\n      const {\n        data\n      } = await Axios.get(\"/api/users\", {\n        headers: {\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: GET_USERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_USERS_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const deleteUser = user => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_USERS_LOAD\n    });\n    const auth = getState().auth;\n\n    try {\n      const token = auth.user.token;\n      debugger;\n      const {\n        data\n      } = await Axios.delete(`/api/users/${user._id}`, {\n        headers: {\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: DELETE_USER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getUserById = (req, res, next) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_USER_LOAD\n    });\n    const auth = getState().auth;\n\n    try {\n      const token = auth.user.token;\n      const {\n        data\n      } = await Axios.get(`/api/users/${user._id}`, {\n        headers: {\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/actions/user.js"],"names":["Axios","DELETE_USER_FAIL","DELETE_USER_SUCCESS","GET_USER_LOAD","GET_USER_FAIL","GET_USER_SUCCESS","GET_USERS_FAIL","GET_USERS_LOAD","GET_USERS_SUCCESS","getUsers","dispatch","getState","type","auth","token","user","data","get","headers","payload","error","response","message","deleteUser","delete","_id","getUserById","req","res","next"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport {\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n  GET_USER_LOAD,\r\n  GET_USER_FAIL,\r\n  GET_USER_SUCCESS,\r\n  GET_USERS_FAIL,\r\n  GET_USERS_LOAD,\r\n  GET_USERS_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const getUsers = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: GET_USERS_LOAD,\r\n    });\r\n    const auth = getState().auth;\r\n    try {\r\n      const token = auth.user.token;\r\n      const { data } = await Axios.get(\"/api/users\", {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: GET_USERS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_USERS_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteUser = (user) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: GET_USERS_LOAD,\r\n    });\r\n    const auth = getState().auth;\r\n    try {\r\n      const token = auth.user.token;\r\n      debugger;\r\n      const { data } = await Axios.delete(`/api/users/${user._id}`, {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: DELETE_USER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getUserById = (req, res, next) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: GET_USER_LOAD,\r\n    });\r\n    const auth = getState().auth;\r\n    try {\r\n      const token = auth.user.token;\r\n      const { data } = await Axios.get(`/api/users/${user._id}`, {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: GET_USER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}