{"ast":null,"code":"import axios from \"axios\";\nimport { CART_ITEM_ADD, CART_ITEM_FAIL, CART_ITEM_LOADING, CART_ITEM_REMOVE, CART_SAVE_ADDRESS, CART_SAVE_PAYMENT_METHOD, CLEAR_MESSAGE_CART } from \"./types\";\nexport const addItemsToCart = (id, qty) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: CART_ITEM_LOADING\n      });\n      const {\n        data\n      } = await axios.get(`/api/products/${id}`);\n      debugger;\n      dispatch({\n        type: CART_ITEM_ADD,\n        payload: {\n          product: data.product._id,\n          name: data.product.name,\n          price: data.product.price,\n          image: data.product.image,\n          countInStock: data.product.countInStock,\n          qty: qty\n        }\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n      dispatch({\n        type: CART_ITEM_FAIL,\n        payload: error.message\n      });\n      setTimeout(() => {\n        dispatch({\n          type: CLEAR_MESSAGE_CART\n        });\n      }, 5000);\n    }\n  };\n};\nexport const removeItemsFromCart = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: CART_ITEM_LOADING\n      });\n      dispatch({\n        type: CART_ITEM_REMOVE,\n        payload: id\n      });\n      localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n      dispatch({\n        type: CART_ITEM_FAIL,\n        payload: error.message\n      });\n      setTimeout(() => {\n        dispatch({\n          type: CLEAR_MESSAGE_CART\n        });\n      }, 5000);\n    }\n  };\n};\nexport const saveShippingAddress = data => {\n  return dispatch => {\n    dispatch({\n      type: CART_SAVE_ADDRESS,\n      payload: data\n    });\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n  };\n};\nexport const savePaymentMethod = data => {\n  return dispatch => {\n    dispatch({\n      type: CART_SAVE_PAYMENT_METHOD,\n      payload: data\n    });\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n  };\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/actions/cart.js"],"names":["axios","CART_ITEM_ADD","CART_ITEM_FAIL","CART_ITEM_LOADING","CART_ITEM_REMOVE","CART_SAVE_ADDRESS","CART_SAVE_PAYMENT_METHOD","CLEAR_MESSAGE_CART","addItemsToCart","id","qty","dispatch","getState","type","data","get","payload","product","_id","name","price","image","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","error","message","setTimeout","removeItemsFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CART_ITEM_ADD,\r\n  CART_ITEM_FAIL,\r\n  CART_ITEM_LOADING,\r\n  CART_ITEM_REMOVE,\r\n  CART_SAVE_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CLEAR_MESSAGE_CART\r\n} from \"./types\";\r\n\r\nexport const addItemsToCart = (id, qty) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CART_ITEM_LOADING,\r\n      });\r\n      const { data } = await axios.get(`/api/products/${id}`);\r\n      debugger;\r\n      dispatch({\r\n        type: CART_ITEM_ADD,\r\n        payload: {\r\n          product: data.product._id,\r\n          name: data.product.name,\r\n          price: data.product.price,\r\n          image: data.product.image,\r\n          countInStock: data.product.countInStock,\r\n          qty: qty,\r\n        },\r\n      });\r\n\r\n      localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n      );\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CART_ITEM_FAIL,\r\n        payload: error.message,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: CLEAR_MESSAGE_CART,\r\n        });\r\n      }, 5000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeItemsFromCart = (id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: CART_ITEM_LOADING,\r\n      });\r\n\r\n      dispatch({\r\n        type: CART_ITEM_REMOVE,\r\n        payload: id,\r\n      });\r\n\r\n      localStorage.setItem(\r\n        \"cartItems\",\r\n        JSON.stringify(getState().cart.cartItems)\r\n      );\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CART_ITEM_FAIL,\r\n        payload: error.message,\r\n      });\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: CLEAR_MESSAGE_CART,\r\n        });\r\n      }, 5000);\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveShippingAddress = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_ADDRESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n  };\r\n};\r\n\r\nexport const savePaymentMethod = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_PAYMENT_METHOD,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}