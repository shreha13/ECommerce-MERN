{"ast":null,"code":"import axios from \"axios\";\nimport { CLEAR_MESSAGE, GET_USER_PROFILE, LOGIN_USER_FAIL, LOGIN_USER_LOAD, LOGIN_USER_SUCCESS, LOGOUT_USER, REGISTER_USER_SUCCESS, UPDATE_USER_FAIL, UPDATE_USER_LOAD, UPDATE_USER_SUCCESS } from \"./types\";\nexport const loginUser = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_LOAD\n    });\n\n    try {\n      const userModel = {\n        email,\n        password\n      };\n      const {\n        data\n      } = await axios.post(`/api/users/login`, userModel, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      dispatch(getProfile());\n      setTimeout(() => {\n        dispatch({\n          type: LOGOUT_USER\n        });\n        localStorage.removeItem(\"user\");\n      }, 3600000);\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"user\");\n    dispatch({\n      type: LOGOUT_USER\n    });\n  };\n};\nexport const registerUser = (email, password, name, isAdmin = false) => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_LOAD\n    });\n\n    try {\n      const user = await axios.post(\"/api/users/register\", {\n        email,\n        password,\n        isAdmin,\n        name\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: user.data\n      });\n      localStorage.setItem(\"user\", user.data);\n      dispatch(getProfile());\n      setTimeout(() => {\n        dispatch({\n          type: LOGOUT_USER\n        });\n        localStorage.removeItem(\"user\");\n      }, 3600000);\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getProfile = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_USER_LOAD\n    });\n\n    try {\n      const {\n        user\n      } = getState().auth;\n      const userProfile = await axios.get(\"/api/users/profile\", {\n        headers: {\n          \"x-auth-header\": `Bearer ${user.token}`\n        }\n      });\n      dispatch({\n        type: GET_USER_PROFILE,\n        payload: userProfile.data\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const updateUserProfile = (email, name, password, isAdmin = false) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: UPDATE_USER_LOAD\n    });\n\n    try {\n      const {\n        user\n      } = getState().auth;\n      let userModel = {\n        email,\n        password,\n        isAdmin,\n        name\n      };\n\n      if (password !== \"\") {\n        userModel = {\n          email,\n          isAdmin,\n          name\n        };\n      }\n\n      const userProfile = await axios.put(\"/api/users/profile\", userModel, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-header\": `Bearer ${user.token}`\n        }\n      });\n      dispatch({\n        type: UPDATE_USER_SUCCESS,\n        payload: userProfile.data\n      });\n      localStorage.setItem(\"user\", user.data);\n      setTimeout(() => {\n        dispatch({\n          type: CLEAR_MESSAGE\n        });\n      }, 5000);\n      setTimeout(() => {\n        dispatch({\n          type: LOGOUT_USER\n        });\n        localStorage.removeItem(\"user\");\n      }, 3600000);\n    } catch (error) {\n      dispatch({\n        type: UPDATE_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/actions/auth.js"],"names":["axios","CLEAR_MESSAGE","GET_USER_PROFILE","LOGIN_USER_FAIL","LOGIN_USER_LOAD","LOGIN_USER_SUCCESS","LOGOUT_USER","REGISTER_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_LOAD","UPDATE_USER_SUCCESS","loginUser","email","password","dispatch","type","userModel","data","post","headers","payload","localStorage","setItem","JSON","stringify","getProfile","setTimeout","removeItem","error","response","message","logout","registerUser","name","isAdmin","user","getState","auth","userProfile","get","token","updateUserProfile","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CLEAR_MESSAGE,\r\n  GET_USER_PROFILE,\r\n  LOGIN_USER_FAIL,\r\n  LOGIN_USER_LOAD,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n  UPDATE_USER_LOAD,\r\n  UPDATE_USER_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const loginUser = (email, password) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER_LOAD,\r\n    });\r\n\r\n    try {\r\n      const userModel = { email, password };\r\n      const { data } = await axios.post(`/api/users/login`, userModel, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: LOGIN_USER_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(data));\r\n      dispatch(getProfile());\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: LOGOUT_USER,\r\n        });\r\n\r\n        localStorage.removeItem(\"user\");\r\n      }, 3600000);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"user\");\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n};\r\n\r\nexport const registerUser = (email, password, name, isAdmin = false) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER_LOAD,\r\n    });\r\n    try {\r\n      const user = await axios.post(\r\n        \"/api/users/register\",\r\n        {\r\n          email,\r\n          password,\r\n          isAdmin,\r\n          name,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: REGISTER_USER_SUCCESS,\r\n        payload: user.data,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", user.data);\r\n      dispatch(getProfile());\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: LOGOUT_USER,\r\n        });\r\n\r\n        localStorage.removeItem(\"user\");\r\n      }, 3600000);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getProfile = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: UPDATE_USER_LOAD,\r\n    });\r\n    try {\r\n      const { user } = getState().auth;\r\n\r\n      const userProfile = await axios.get(\"/api/users/profile\", {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_USER_PROFILE,\r\n        payload: userProfile.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserProfile = (email, name, password, isAdmin = false) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: UPDATE_USER_LOAD,\r\n    });\r\n    try {\r\n      const { user } = getState().auth;\r\n      let userModel = {\r\n        email,\r\n        password,\r\n        isAdmin,\r\n        name,\r\n      };\r\n\r\n      if (password !== \"\") {\r\n        userModel = {\r\n          email,\r\n          isAdmin,\r\n          name,\r\n        };\r\n      }\r\n      const userProfile = await axios.put(\"/api/users/profile\", userModel, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-auth-header\": `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: UPDATE_USER_SUCCESS,\r\n        payload: userProfile.data,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", user.data);\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: CLEAR_MESSAGE,\r\n        });\r\n      }, 5000);\r\n\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: LOGOUT_USER,\r\n        });\r\n\r\n        localStorage.removeItem(\"user\");\r\n      }, 3600000);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}