{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USER_PROFILE, LOGIN_USER_FAIL, LOGIN_USER_LOAD, LOGIN_USER_SUCCESS, LOGOUT_USER, REGISTER_USER_SUCCESS, UPDATE_USER_FAIL, UPDATE_USER_LOAD, UPDATE_USER_SUCCESS } from \"./types\";\nexport const loginUser = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_LOAD\n    });\n\n    try {\n      const userModel = {\n        email,\n        password\n      };\n      const {\n        data\n      } = await axios.post(`/api/users/login`, userModel, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: data\n      });\n      localStorage.setItem(\"user\", JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"user\");\n    dispatch({\n      type: LOGOUT_USER\n    });\n  };\n};\nexport const registerUser = (email, password, name, isAdmin = false) => {\n  return async dispatch => {\n    dispatch({\n      type: LOGIN_USER_LOAD\n    });\n\n    try {\n      const user = await axios.post(\"/api/users/register\", {\n        email,\n        password,\n        isAdmin,\n        name\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: REGISTER_USER_SUCCESS,\n        payload: user.data\n      });\n      localStorage.setItem(\"user\", user.data);\n    } catch (error) {\n      dispatch({\n        type: LOGIN_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getProfile = () => {\n  return async dispatch => {\n    dispatch({\n      type: UPDATE_USER_LOAD\n    });\n\n    try {\n      const user = await axios.get(\"/api/users/profile\");\n      dispatch({\n        type: GET_USER_PROFILE,\n        payload: user.data\n      });\n    } catch (error) {\n      dispatch({\n        type: UPDATE_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const updateUserProfile = (email, password, name, isAdmin = false) => {\n  return async dispatch => {\n    dispatch({\n      type: UPDATE_USER_LOAD\n    });\n\n    try {\n      const user = await axios.put(\"/api/users/profile\", {\n        email,\n        password,\n        isAdmin,\n        name\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      dispatch({\n        type: UPDATE_USER_SUCCESS,\n        payload: user.data\n      });\n      localStorage.setItem(\"user\", user.data);\n    } catch (error) {\n      dispatch({\n        type: UPDATE_USER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/actions/auth.js"],"names":["axios","GET_USER_PROFILE","LOGIN_USER_FAIL","LOGIN_USER_LOAD","LOGIN_USER_SUCCESS","LOGOUT_USER","REGISTER_USER_SUCCESS","UPDATE_USER_FAIL","UPDATE_USER_LOAD","UPDATE_USER_SUCCESS","loginUser","email","password","dispatch","type","userModel","data","post","headers","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","registerUser","name","isAdmin","user","getProfile","get","updateUserProfile","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,WALF,EAMEC,qBANF,EAOEC,gBAPF,EAQEC,gBARF,EASEC,mBATF,QAUO,SAVP;AAYA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;;AAIA,QAAI;AACF,YAAMY,SAAS,GAAG;AAAEJ,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAlB;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAW,MAAMhB,KAAK,CAACiB,IAAN,CAAY,kBAAZ,EAA+BF,SAA/B,EAA0C;AAC/DG,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADsD,OAA1C,CAAvB;AAMAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEV,kBADC;AAEPe,QAAAA,OAAO,EAAEH;AAFF,OAAD,CAAR;AAKAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAA7B;AACD,KAdD,CAcE,OAAOQ,KAAP,EAAc;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEZ,eADC;AAEPiB,QAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAArC,GAA+CF,KAAK,CAACE;AAFvD,OAAD,CAAR;AAID;AACF,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,SAAQd,QAAD,IAAc;AACnBO,IAAAA,YAAY,CAACQ,UAAb,CAAwB,MAAxB;AACAf,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GALD;AAMD,CAPM;AASP,OAAO,MAAMwB,YAAY,GAAG,CAAClB,KAAD,EAAQC,QAAR,EAAkBkB,IAAlB,EAAwBC,OAAO,GAAG,KAAlC,KAA4C;AACtE,SAAO,MAAOlB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;;AAGA,QAAI;AACF,YAAM6B,IAAI,GAAG,MAAMhC,KAAK,CAACiB,IAAN,CACjB,qBADiB,EAEjB;AACEN,QAAAA,KADF;AAEEC,QAAAA,QAFF;AAGEmB,QAAAA,OAHF;AAIED,QAAAA;AAJF,OAFiB,EAQjB;AACEZ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADX,OARiB,CAAnB;AAeAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,qBADC;AAEPa,QAAAA,OAAO,EAAEa,IAAI,CAAChB;AAFP,OAAD,CAAR;AAKAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BW,IAAI,CAAChB,IAAlC;AACD,KAtBD,CAsBE,OAAOQ,KAAP,EAAc;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEZ,eADC;AAEPiB,QAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAArC,GAA+CF,KAAK,CAACE;AAFvD,OAAD,CAAR;AAID;AACF,GAhCD;AAiCD,CAlCM;AAoCP,OAAO,MAAMO,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAOpB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMwB,IAAI,GAAG,MAAMhC,KAAK,CAACkC,GAAN,CAAU,oBAAV,CAAnB;AAEArB,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEb,gBADC;AAEPkB,QAAAA,OAAO,EAAEa,IAAI,CAAChB;AAFP,OAAD,CAAR;AAID,KAPD,CAOE,OAAOQ,KAAP,EAAc;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,gBADC;AAEPY,QAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAArC,GAA+CF,KAAK,CAACE;AAFvD,OAAD,CAAR;AAID;AACF,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMS,iBAAiB,GAAG,CAACxB,KAAD,EAAQC,QAAR,EAAkBkB,IAAlB,EAAwBC,OAAO,GAAG,KAAlC,KAA4C;AAC3E,SAAO,MAAOlB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMwB,IAAI,GAAG,MAAMhC,KAAK,CAACoC,GAAN,CACjB,oBADiB,EAEjB;AACEzB,QAAAA,KADF;AAEEC,QAAAA,QAFF;AAGEmB,QAAAA,OAHF;AAIED,QAAAA;AAJF,OAFiB,EAQjB;AACEZ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADX,OARiB,CAAnB;AAeAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,mBADC;AAEPU,QAAAA,OAAO,EAAEa,IAAI,CAAChB;AAFP,OAAD,CAAR;AAKAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BW,IAAI,CAAChB,IAAlC;AACD,KAtBD,CAsBE,OAAOQ,KAAP,EAAc;AACdX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,gBADC;AAEPY,QAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,OAArC,GAA+CF,KAAK,CAACE;AAFvD,OAAD,CAAR;AAID;AACF,GAhCD;AAiCD,CAlCM","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_USER_PROFILE,\r\n  LOGIN_USER_FAIL,\r\n  LOGIN_USER_LOAD,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  UPDATE_USER_FAIL,\r\n  UPDATE_USER_LOAD,\r\n  UPDATE_USER_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const loginUser = (email, password) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER_LOAD,\r\n    });\r\n\r\n    try {\r\n      const userModel = { email, password };\r\n      const { data } = await axios.post(`/api/users/login`, userModel, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: LOGIN_USER_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"user\");\r\n    dispatch({\r\n      type: LOGOUT_USER,\r\n    });\r\n  };\r\n};\r\n\r\nexport const registerUser = (email, password, name, isAdmin = false) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: LOGIN_USER_LOAD,\r\n    });\r\n    try {\r\n      const user = await axios.post(\r\n        \"/api/users/register\",\r\n        {\r\n          email,\r\n          password,\r\n          isAdmin,\r\n          name,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: REGISTER_USER_SUCCESS,\r\n        payload: user.data,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", user.data);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getProfile = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_USER_LOAD,\r\n    });\r\n    try {\r\n      const user = await axios.get(\"/api/users/profile\");\r\n\r\n      dispatch({\r\n        type: GET_USER_PROFILE,\r\n        payload: user.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUserProfile = (email, password, name, isAdmin = false) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: UPDATE_USER_LOAD,\r\n    });\r\n    try {\r\n      const user = await axios.put(\r\n        \"/api/users/profile\",\r\n        {\r\n          email,\r\n          password,\r\n          isAdmin,\r\n          name,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch({\r\n        type: UPDATE_USER_SUCCESS,\r\n        payload: user.data,\r\n      });\r\n\r\n      localStorage.setItem(\"user\", user.data);\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UPDATE_USER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}