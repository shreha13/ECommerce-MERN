{"ast":null,"code":"const {\n  CART_ITEM_ADD\n} = require(\"../actions/types\");\n\nconst initialState = {\n  cartItems: [],\n  error: null,\n  loading: false\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CART_ITEM_ADD:\n      const item = payload;\n      const itemExist = state.cartItems.find(i => i.product === item.product);\n\n      if (itemExist) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === itemExist.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/reducers/cart.js"],"names":["CART_ITEM_ADD","require","initialState","cartItems","error","loading","reducer","state","type","payload","item","itemExist","find","i","product","map","x"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,kBAAD,CAAjC;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuB;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC3D,UAAQD,IAAR;AACE,SAAKR,aAAL;AACE,YAAMU,IAAI,GAAGD,OAAb;AACA,YAAME,SAAS,GAAGJ,KAAK,CAACJ,SAAN,CAAgBS,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcJ,IAAI,CAACI,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGJ,KADE;AAELJ,UAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,CAAgBY,GAAhB,CAAqBC,CAAD,IAC7BA,CAAC,CAACF,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCJ,IAAlC,GAAyCM,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGT,KADE;AAELJ,UAAAA,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACJ,SAAV,EAAqBO,IAArB;AAFN,SAAP;AAID;;AACH;AACE,aAAOH,KAAP;AAlBJ;AAoBD,CArBD","sourcesContent":["const { CART_ITEM_ADD } = require(\"../actions/types\");\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CART_ITEM_ADD:\r\n      const item = payload;\r\n      const itemExist = state.cartItems.find((i) => i.product === item.product);\r\n      if (itemExist) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === itemExist.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}