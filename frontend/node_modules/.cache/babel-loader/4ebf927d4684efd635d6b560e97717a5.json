{"ast":null,"code":"import { DELETE_USER_FAIL, DELETE_USER_SUCCESS, GET_USERS_FAIL, GET_USERS_LOAD, GET_USERS_SUCCESS, GET_USER_FAIL, GET_USER_LOAD, GET_USER_SUCCESS, UPDATE_ADMIN_USER_FAIL, UPDATE_ADMIN_USER_SUCCESS } from \"../actions/types\";\nconst initialState = {\n  users: [],\n  user: {},\n  error: null,\n  loading: false\n};\n\nconst userReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_USERS_SUCCESS:\n    case DELETE_USER_SUCCESS:\n      return { ...state,\n        users: payload,\n        loading: false\n      };\n\n    case GET_USERS_LOAD:\n    case GET_USER_LOAD:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_USERS_FAIL:\n    case DELETE_USER_FAIL:\n    case GET_USER_FAIL:\n    case UPDATE_ADMIN_USER_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case GET_USER_SUCCESS:\n    case UPDATE_ADMIN_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        user: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/reducers/user.js"],"names":["DELETE_USER_FAIL","DELETE_USER_SUCCESS","GET_USERS_FAIL","GET_USERS_LOAD","GET_USERS_SUCCESS","GET_USER_FAIL","GET_USER_LOAD","GET_USER_SUCCESS","UPDATE_ADMIN_USER_FAIL","UPDATE_ADMIN_USER_SUCCESS","initialState","users","user","error","loading","userReducer","state","type","payload"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,iBALF,EAMEC,aANF,EAOEC,aAPF,EAQEC,gBARF,EASEC,sBATF,EAUEC,yBAVF,QAWO,kBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuB;AAAEO,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC/D,UAAQD,IAAR;AACE,SAAKb,iBAAL;AACA,SAAKH,mBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,KAAK,EAAEO,OAFF;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,cAAL;AACA,SAAKG,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKZ,cAAL;AACA,SAAKF,gBAAL;AACA,SAAKK,aAAL;AACE,SAAKG,sBAAL;AACA,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,KAAK,EAAEK;AAHF,OAAP;;AAKF,SAAKX,gBAAL;AACA,SAAKE,yBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,OAAO,EAAE,KAFJ;AAGLF,QAAAA,IAAI,EAAEM;AAHD,OAAP;;AAKF;AACE,aAAOF,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import {\r\n  DELETE_USER_FAIL,\r\n  DELETE_USER_SUCCESS,\r\n  GET_USERS_FAIL,\r\n  GET_USERS_LOAD,\r\n  GET_USERS_SUCCESS,\r\n  GET_USER_FAIL,\r\n  GET_USER_LOAD,\r\n  GET_USER_SUCCESS,\r\n  UPDATE_ADMIN_USER_FAIL,\r\n  UPDATE_ADMIN_USER_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: {},\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS_SUCCESS:\r\n    case DELETE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n        loading: false,\r\n      };\r\n    case GET_USERS_LOAD:\r\n    case GET_USER_LOAD:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case GET_USERS_FAIL:\r\n    case DELETE_USER_FAIL:\r\n    case GET_USER_FAIL:\r\n      case UPDATE_ADMIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case GET_USER_SUCCESS:\r\n    case UPDATE_ADMIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n"]},"metadata":{},"sourceType":"module"}