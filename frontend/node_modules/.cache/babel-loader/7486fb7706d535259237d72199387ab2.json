{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\ECommerce-MERN\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { loginUser } from \"../actions/auth\";\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const {\n    error,\n    loading,\n    user\n  } = auth;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(loginUser(email, password));\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }, this);\n\n  if (user && !loading) {\n    debugger;\n    history.push(\"/\");\n  } else {\n    content = /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [error && !loading && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"New Customer?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/register?redirect=${redirect}` : \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LoginScreen, \"Vl8HXpto7sOBJyjMB/B6D1BnMw4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/screens/LoginScreen.js"],"names":["React","Fragment","useState","Button","Col","Form","Row","useDispatch","useSelector","Link","loginUser","FormContainer","Loader","Message","LoginScreen","location","history","email","setEmail","password","setPassword","redirect","search","split","dispatch","auth","state","error","loading","user","submitHandler","e","preventDefault","content","push","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions/auth\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { error, loading, user } = auth;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(email, password));\r\n  };\r\n\r\n  let content = <Loader />;\r\n  if (user && !loading) {\r\n    debugger;\r\n    history.push(\"/\");\r\n  } else {\r\n    content = (\r\n      <FormContainer>\r\n        {error && !loading && <Message variant=\"danger\">{error}</Message>}\r\n        <h1>Sign In</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer?{\" \"}\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            >\r\n              Register\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    );\r\n  }\r\n\r\n  return <Fragment>{content}</Fragment>;\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}