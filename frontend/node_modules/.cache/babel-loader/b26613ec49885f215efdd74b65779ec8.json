{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst middleware = [thunk];\nconst cartItemFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userFromStorage = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  },\n  auth: {\n    user: userFromStorage\n  }\n};\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","middleware","cartItemFromStorage","localStorage","getItem","JSON","parse","userFromStorage","initialState","cart","cartItems","auth","user","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,UAAU,GAAG,CAACF,KAAD,CAAnB;AAEA,MAAMG,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GAExB,EAFJ;AAIA,MAAMG,eAAe,GAAGJ,YAAY,CAACC,OAAb,CAAqB,MAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADoB,GAEpB,EAFJ;AAIA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAS,EAAER;AAAb,GADa;AAEnBS,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEL;AAAR;AAFa,CAArB;AAKA,MAAMM,KAAK,GAAGjB,WAAW,CACvBI,WADuB,EAEvBQ,YAFuB,EAGvBV,mBAAmB,CAACD,eAAe,CAAC,GAAGI,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeY,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartItemFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userFromStorage = localStorage.getItem(\"user\")\r\n  ? JSON.parse(localStorage.getItem(\"user\"))\r\n  : [];\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemFromStorage },\r\n  auth: { user: userFromStorage },\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}