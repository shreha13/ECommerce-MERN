{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\ECommerce-MERN\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { ADD_PRODUCT_RESET } from \"../actions/types\";\nimport { addProduct, editProduct, getProductById } from \"../actions/product\";\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Axios from \"axios\";\n\nconst ProductEditScreen = ({\n  location,\n  match,\n  history\n}) => {\n  _s();\n\n  const id = match.params.id;\n  const [category, setCategory] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.product);\n  const {\n    error,\n    success,\n    loading,\n    product: ProductInfo\n  } = products;\n  useEffect(() => {\n    dispatch({\n      type: ADD_PRODUCT_RESET\n    });\n\n    if (success) {\n      //   dispatch({ type: GET_Product_RESET });\n      history.push(\"/admin/products\");\n    } else if (location.pathname.endsWith(\"edit\")) {\n      if (!ProductInfo.name || ProductInfo._id !== id) dispatch(getProductById(id));else {\n        setName(ProductInfo.name);\n        setCategory(ProductInfo.category);\n        setBrand(ProductInfo.brand);\n        setPrice(ProductInfo.price);\n        setDescription(ProductInfo.description);\n        setImage(ProductInfo.image);\n        setCountInStock(ProductInfo.countInStock);\n      }\n    }\n  }, [dispatch, match, ProductInfo, id, history, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (location.pathname.endsWith(\"edit\")) {\n      dispatch(editProduct({\n        name,\n        description,\n        price,\n        category,\n        countInStock,\n        image,\n        brand,\n        _id: id\n      }));\n    } else {\n      dispatch(addProduct({\n        name,\n        description,\n        price,\n        category,\n        brand,\n        countInStock,\n        image: \"/images/phone.jpg\"\n      }));\n    } // dispatch(updateProduct({ name, email, isAdmin, _id: id }));\n\n  };\n\n  const fileUploadHandler = async e => {\n    debugger;\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const {\n        data\n      } = await Axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/products\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [location.pathname.endsWith(\"edit\") ? \"Edit\" : \"Add\", \" Product\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            label: \"Choose file\",\n            custom: true,\n            onChange: e => fileUploadHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count in Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductEditScreen, \"haLVpqX2OgbZLzuHqZXvwf1MViY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/screens/ProductEditScreen.js"],"names":["React","Fragment","useEffect","useState","Button","Form","useDispatch","useSelector","Link","ADD_PRODUCT_RESET","addProduct","editProduct","getProductById","FormContainer","Loader","Message","Axios","ProductEditScreen","location","match","history","id","params","category","setCategory","name","setName","brand","setBrand","price","setPrice","countInStock","setCountInStock","image","setImage","description","setDescription","uploading","setUploading","dispatch","products","state","product","error","success","loading","ProductInfo","type","push","pathname","endsWith","_id","submitHandler","e","preventDefault","fileUploadHandler","file","target","files","formData","FormData","append","data","post","headers","console","log","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ADD_PRODUCT_RESET } from \"../actions/types\";\r\nimport { addProduct, editProduct, getProductById } from \"../actions/product\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Axios from \"axios\";\r\n\r\nconst ProductEditScreen = ({ location, match, history }) => {\r\n  const id = match.params.id;\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const products = useSelector((state) => state.product);\r\n\r\n  const { error, success, loading, product: ProductInfo } = products;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ADD_PRODUCT_RESET });\r\n    if (success) {\r\n      //   dispatch({ type: GET_Product_RESET });\r\n      history.push(\"/admin/products\");\r\n    } else if (location.pathname.endsWith(\"edit\")) {\r\n      if (!ProductInfo.name || ProductInfo._id !== id)\r\n        dispatch(getProductById(id));\r\n      else {\r\n        setName(ProductInfo.name);\r\n        setCategory(ProductInfo.category);\r\n        setBrand(ProductInfo.brand);\r\n        setPrice(ProductInfo.price);\r\n        setDescription(ProductInfo.description);\r\n        setImage(ProductInfo.image);\r\n        setCountInStock(ProductInfo.countInStock);\r\n      }\r\n    }\r\n  }, [dispatch, match, ProductInfo, id, history, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (location.pathname.endsWith(\"edit\")) {\r\n      dispatch(\r\n        editProduct({\r\n          name,\r\n          description,\r\n          price,\r\n          category,\r\n          countInStock,\r\n          image,\r\n          brand,\r\n          _id: id,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addProduct({\r\n          name,\r\n          description,\r\n          price,\r\n          category,\r\n          brand,\r\n          countInStock,\r\n          image: \"/images/phone.jpg\",\r\n        })\r\n      );\r\n    }\r\n    // dispatch(updateProduct({ name, email, isAdmin, _id: id }));\r\n  };\r\n\r\n  const fileUploadHandler = async (e) => {\r\n    debugger;\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const { data } = await Axios.post(\"/api/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/admin/products\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>{location.pathname.endsWith(\"edit\") ? \"Edit\" : \"Add\"} Product</h1>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.File\r\n                label=\"Choose file\"\r\n                custom\r\n                onChange={(e) => fileUploadHandler(e.target.value)}\r\n              ></Form.File>\r\n            </Form.Group>\r\n            {uploading && <Loader />}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Count in Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}