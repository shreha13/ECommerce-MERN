{"ast":null,"code":"import { DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, GET_PRODUCT, GET_PRODUCTS, GET_PRODUCTS_FAIL, GET_PRODUCTS_START } from \"./types\";\nimport axios from \"axios\";\nexport const getProducts = () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_PRODUCTS_START\n    });\n\n    try {\n      const response = await axios.get(\"/api/products\");\n      const products = response.data.products;\n      dispatch({\n        type: GET_PRODUCTS,\n        payload: products\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PRODUCTS_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getProductById = id => {\n  return async dispatch => {\n    dispatch({\n      type: GET_PRODUCTS_START\n    });\n\n    try {\n      const response = await axios.get(\"/api/products/\" + id);\n      const product = response.data.product;\n      dispatch({\n        type: GET_PRODUCT,\n        payload: product\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PRODUCTS_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const deleteProduct = id => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_PRODUCTS_START\n    });\n    const auth = getState().auth;\n\n    try {\n      const token = auth.user.token;\n      const {\n        data\n      } = await axios.delete(`/api/products/${id}`, {\n        headers: {\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: DELETE_PRODUCT_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_PRODUCT_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/actions/product.js"],"names":["DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","GET_PRODUCT","GET_PRODUCTS","GET_PRODUCTS_FAIL","GET_PRODUCTS_START","axios","getProducts","dispatch","type","response","get","products","data","payload","error","message","getProductById","id","product","deleteProduct","getState","auth","token","user","delete","headers"],"mappings":"AAAA,SACEA,mBADF,EAEEC,sBAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,iBALF,EAMEC,kBANF,QAOO,SAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;;AAIA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAAvB;AACA,YAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAcD,QAA/B;AACAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,YADC;AAEPW,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAOG,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,iBADC;AAEPU,QAAAA,OAAO,EAAEC,KAAK,CAACL,QAAN,GAAiBK,KAAK,CAACL,QAAN,CAAeG,IAAf,CAAoBG,OAArC,GAA+CD,KAAK,CAACC;AAFvD,OAAD,CAAR;AAID;AACF,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAAQ;AACpC,SAAO,MAAOV,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;;AAIA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,mBAAmBO,EAA7B,CAAvB;AACA,YAAMC,OAAO,GAAGT,QAAQ,CAACG,IAAT,CAAcM,OAA9B;AACAX,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,WADC;AAEPY,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAOJ,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,iBADC;AAEPU,QAAAA,OAAO,EAAEC,KAAK,CAACL,QAAN,GAAiBK,KAAK,CAACL,QAAN,CAAeG,IAAf,CAAoBG,OAArC,GAA+CD,KAAK,CAACC;AAFvD,OAAD,CAAR;AAID;AACF,GAlBD;AAmBD,CApBM;AAsBP,OAAO,MAAMI,aAAa,GAAIF,EAAD,IAAQ;AACnC,SAAO,OAAOV,QAAP,EAAiBa,QAAjB,KAA8B;AACnCb,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;AAGA,UAAMiB,IAAI,GAAGD,QAAQ,GAAGC,IAAxB;;AACA,QAAI;AACF,YAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUD,KAAxB;AAEA,YAAM;AAAEV,QAAAA;AAAF,UAAW,MAAMP,KAAK,CAACmB,MAAN,CAAc,iBAAgBP,EAAG,EAAjC,EAAoC;AACzDQ,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASH,KAAM;AAD1B;AADgD,OAApC,CAAvB;AAKAf,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAER,sBADC;AAEPa,QAAAA,OAAO,EAAED;AAFF,OAAD,CAAR;AAID,KAZD,CAYE,OAAOE,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAET,mBADC;AAEPc,QAAAA,OAAO,EAAEC,KAAK,CAACL,QAAN,GAAiBK,KAAK,CAACL,QAAN,CAAeG,IAAf,CAAoBG,OAArC,GAA+CD,KAAK,CAACC;AAFvD,OAAD,CAAR;AAID;AACF,GAvBD;AAwBD,CAzBM","sourcesContent":["import {\r\n  DELETE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  GET_PRODUCT,\r\n  GET_PRODUCTS,\r\n  GET_PRODUCTS_FAIL,\r\n  GET_PRODUCTS_START,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getProducts = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: GET_PRODUCTS_START,\r\n    });\r\n\r\n    try {\r\n      const response = await axios.get(\"/api/products\");\r\n      const products = response.data.products;\r\n      dispatch({\r\n        type: GET_PRODUCTS,\r\n        payload: products,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_PRODUCTS_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getProductById = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: GET_PRODUCTS_START,\r\n    });\r\n\r\n    try {\r\n      const response = await axios.get(\"/api/products/\" + id);\r\n      const product = response.data.product;\r\n      dispatch({\r\n        type: GET_PRODUCT,\r\n        payload: product,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_PRODUCTS_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProduct = (id) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: GET_PRODUCTS_START,\r\n    });\r\n    const auth = getState().auth;\r\n    try {\r\n      const token = auth.user.token;\r\n\r\n      const { data } = await axios.delete(`/api/products/${id}`, {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n      dispatch({\r\n        type: DELETE_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_PRODUCT_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}