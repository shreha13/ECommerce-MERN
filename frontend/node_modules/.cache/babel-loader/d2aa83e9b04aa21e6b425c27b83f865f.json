{"ast":null,"code":"import { CREATE_ORDER_FAIL, CREATE_ORDER_LOAD, CREATE_ORDER_SUCCESS, GET_ORDERS_FAIL, GET_ORDERS_SUCCESS, GET_ORDER_FAIL, GET_ORDER_SUCCESS, PAY_ORDERS_FAIL, PAY_ORDER_LOAD, PAY_ORDER_SUCCESS } from \"../actions/types\";\nconst initialState = {\n  error: null,\n  loading: false,\n  orders: [],\n  successPay: false,\n  loadingPay: false,\n  order: null,\n  success: false\n};\n\nconst orderReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case CREATE_ORDER_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: null,\n        success: true,\n        order: payload\n      };\n\n    case CREATE_ORDER_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload,\n        success: false\n      };\n\n    case CREATE_ORDER_LOAD:\n      return { ...state,\n        loading: true,\n        success: false\n      };\n\n    case PAY_ORDER_LOAD:\n      return { ...state,\n        loadingPay: true,\n        successPay: false\n      };\n\n    case GET_ORDER_SUCCESS:\n      return { ...state,\n        error: null,\n        order: payload,\n        loading: false\n      };\n\n    case PAY_ORDER_SUCCESS:\n      return { ...state,\n        error: null,\n        order: payload,\n        loadingPay: false,\n        successPay: true\n      };\n\n    case GET_ORDERS_FAIL:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case PAY_ORDERS_FAIL:\n      return { ...state,\n        error: payload,\n        order: null,\n        successPay: false,\n        loadingPay: false\n      };\n\n    case GET_ORDERS_SUCCESS:\n      return { ...state,\n        orders: payload,\n        error: null,\n        loading: false\n      };\n\n    case GET_ORDER_FAIL:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/reducers/order.js"],"names":["CREATE_ORDER_FAIL","CREATE_ORDER_LOAD","CREATE_ORDER_SUCCESS","GET_ORDERS_FAIL","GET_ORDERS_SUCCESS","GET_ORDER_FAIL","GET_ORDER_SUCCESS","PAY_ORDERS_FAIL","PAY_ORDER_LOAD","PAY_ORDER_SUCCESS","initialState","error","loading","orders","successPay","loadingPay","order","success","orderReducer","state","type","payload"],"mappings":"AAAA,SACEA,iBADF,EAEEC,iBAFF,EAGEC,oBAHF,EAIEC,eAJF,EAKEC,kBALF,EAMEC,cANF,EAOEC,iBAPF,EAQEC,eARF,EASEC,cATF,EAUEC,iBAVF,QAWO,kBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,UAAU,EAAE,KAJO;AAKnBC,EAAAA,UAAU,EAAE,KALO;AAMnBC,EAAAA,KAAK,EAAE,IANY;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB;;AAUA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuB;AAAEU,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAChE,UAAQD,IAAR;AACE,SAAKlB,oBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELP,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,KAAK,EAAE,IAHF;AAILM,QAAAA,OAAO,EAAE,IAJJ;AAKLD,QAAAA,KAAK,EAAEK;AALF,OAAP;;AAOF,SAAKrB,iBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELP,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,KAAK,EAAEU,OAHF;AAILJ,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKhB,iBAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELP,QAAAA,OAAO,EAAE,IAFJ;AAGLK,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,UAAU,EAAE,IAFP;AAGLD,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKR,iBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELR,QAAAA,KAAK,EAAE,IAFF;AAGLK,QAAAA,KAAK,EAAEK,OAHF;AAILT,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKH,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELR,QAAAA,KAAK,EAAE,IAFF;AAGLK,QAAAA,KAAK,EAAEK,OAHF;AAILN,QAAAA,UAAU,EAAE,KAJP;AAKLD,QAAAA,UAAU,EAAE;AALP,OAAP;;AAOF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELR,QAAAA,KAAK,EAAEU,OAFF;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKL,eAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELR,QAAAA,KAAK,EAAEU,OAFF;AAGLL,QAAAA,KAAK,EAAE,IAHF;AAILF,QAAAA,UAAU,EAAE,KAJP;AAKLC,QAAAA,UAAU,EAAE;AALP,OAAP;;AAOF,SAAKX,kBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELN,QAAAA,MAAM,EAAEQ,OAFH;AAGLV,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELR,QAAAA,KAAK,EAAEU,OAFF;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOO,KAAP;AAxEJ;AA0ED,CA3ED;;AA6EA,eAAeD,YAAf","sourcesContent":["import {\r\n  CREATE_ORDER_FAIL,\r\n  CREATE_ORDER_LOAD,\r\n  CREATE_ORDER_SUCCESS,\r\n  GET_ORDERS_FAIL,\r\n  GET_ORDERS_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_SUCCESS,\r\n  PAY_ORDERS_FAIL,\r\n  PAY_ORDER_LOAD,\r\n  PAY_ORDER_SUCCESS,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  loading: false,\r\n  orders: [],\r\n  successPay: false,\r\n  loadingPay: false,\r\n  order: null,\r\n  success: false,\r\n};\r\n\r\nconst orderReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case CREATE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        success: true,\r\n        order: payload,\r\n      };\r\n    case CREATE_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n        success: false,\r\n      };\r\n    case CREATE_ORDER_LOAD:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        success: false,\r\n      };\r\n    case PAY_ORDER_LOAD:\r\n      return {\r\n        ...state,\r\n        loadingPay: true,\r\n        successPay: false,\r\n      };\r\n    case GET_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        order: payload,\r\n        loading: false,\r\n      };\r\n    case PAY_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        order: payload,\r\n        loadingPay: false,\r\n        successPay: true,\r\n      };\r\n    case GET_ORDERS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case PAY_ORDERS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        order: null,\r\n        successPay: false,\r\n        loadingPay: false,\r\n      };\r\n    case GET_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orders: payload,\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case GET_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n"]},"metadata":{},"sourceType":"module"}