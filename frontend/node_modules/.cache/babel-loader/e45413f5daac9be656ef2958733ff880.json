{"ast":null,"code":"import axios from \"axios\";\nimport { CREATE_ORDER_FAIL, CREATE_ORDER_LOAD, CREATE_ORDER_SUCCESS, GET_ORDERS_FAIL, GET_ORDERS_SUCCESS, GET_ORDER_FAIL, GET_ORDER_SUCCESS } from \"./types\";\nexport const createOrder = orderData => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: CREATE_ORDER_LOAD\n    });\n    const token = getState().auth.token;\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/orders\", orderData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: CREATE_ORDER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_ORDER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getOrders = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: CREATE_ORDER_LOAD\n    });\n    const token = getState().auth.token;\n\n    try {\n      const {\n        data\n      } = await axios.get(\"/api/orders\", {\n        headers: {\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: GET_ORDERS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ORDERS_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getOrderById = id => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: CREATE_ORDER_LOAD\n    });\n    const token = getState().auth.token;\n\n    try {\n      const {\n        data\n      } = await axios.get(\"/api/orders\" + id, {\n        headers: {\n          \"x-auth-header\": `Bearer ${token}`\n        }\n      });\n      dispatch({\n        type: GET_ORDER_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_ORDER_FAIL,\n        payload: error.response ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/actions/order.js"],"names":["axios","CREATE_ORDER_FAIL","CREATE_ORDER_LOAD","CREATE_ORDER_SUCCESS","GET_ORDERS_FAIL","GET_ORDERS_SUCCESS","GET_ORDER_FAIL","GET_ORDER_SUCCESS","createOrder","orderData","dispatch","getState","type","token","auth","data","post","headers","payload","error","response","message","getOrders","get","getOrderById","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CREATE_ORDER_FAIL,\r\n  CREATE_ORDER_LOAD,\r\n  CREATE_ORDER_SUCCESS,\r\n  GET_ORDERS_FAIL,\r\n  GET_ORDERS_SUCCESS,\r\n  GET_ORDER_FAIL,\r\n  GET_ORDER_SUCCESS,\r\n} from \"./types\";\r\n\r\n\r\nexport const createOrder = (orderData) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: CREATE_ORDER_LOAD,\r\n    });\r\n\r\n    const token = getState().auth.token\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/api/orders\", orderData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: CREATE_ORDER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_ORDER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrders = () => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: CREATE_ORDER_LOAD,\r\n    });\r\n\r\n    const token = getState().auth.token\r\n    try {\r\n      const { data } = await axios.get(\"/api/orders\", {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ORDERS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ORDERS_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getOrderById = (id) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: CREATE_ORDER_LOAD,\r\n    });\r\n\r\n    const token = getState().auth.token\r\n\r\n    try {\r\n      const { data } = await axios.get(\"/api/orders\" + id, {\r\n        headers: {\r\n          \"x-auth-header\": `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: GET_ORDER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GET_ORDER_FAIL,\r\n        payload: error.response ? error.response.data.message : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}