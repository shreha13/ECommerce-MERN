{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\ECommerce-MERN\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { getProfile, updateUserProfile } from \"../actions/auth\";\nimport { getOrders } from \"../actions/order\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message1, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const order = useSelector(state => state.order);\n  const {\n    error,\n    loading,\n    user,\n    userProfile,\n    message\n  } = auth;\n  const {\n    error: errorOrder,\n    loading: loadingOrder,\n    orders\n  } = order;\n  useEffect(() => {\n    dispatch(getOrders());\n\n    if (userProfile) {\n      setName(userProfile.name);\n      setEmail(userProfile.email);\n    } else {\n      dispatch(getProfile());\n    }\n  }, [userProfile, dispatch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    debugger;\n\n    if (password === confirmPassword) {\n      setMessage(null);\n      dispatch(updateUserProfile(email, name, password));\n    } else {\n      setMessage(\"Passwords does not match.\");\n    }\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }, this);\n\n  if (!user && !loading) {\n    history.push(\"/login\");\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [error && !loading && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this), message1 && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: message1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), loadingOrder ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : errorOrder ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          bordered: true,\n          hovered: true,\n          striped: true,\n          responsive: true,\n          className: \"table-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), orders.map(i => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: i._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.isPaid ? i.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: i.isDelivered ? i.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: \"red\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${i._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-sm\",\n                  variant: \"light\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, i._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProfileScreen, \"VzPsQ6WXaE2q48bRbZ5F468DbFk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/screens/ProfileScreen.js"],"names":["React","Fragment","useEffect","useState","Button","Col","Form","Row","Table","useDispatch","useSelector","LinkContainer","getProfile","updateUserProfile","getOrders","Loader","Message","ProfileScreen","location","history","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message1","setMessage","dispatch","auth","state","order","error","loading","user","userProfile","message","errorOrder","loadingOrder","orders","submitHandler","e","preventDefault","content","push","target","value","map","i","_id","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { getProfile, updateUserProfile } from \"../actions/auth\";\r\nimport { getOrders } from \"../actions/order\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message1, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const order = useSelector((state) => state.order);\r\n\r\n  const { error, loading, user, userProfile, message } = auth;\r\n\r\n  const { error: errorOrder, loading: loadingOrder, orders } = order;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n    if (userProfile) {\r\n      setName(userProfile.name);\r\n      setEmail(userProfile.email);\r\n    } else {\r\n      dispatch(getProfile());\r\n    }\r\n  }, [userProfile, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    if (password === confirmPassword) {\r\n      setMessage(null);\r\n      dispatch(updateUserProfile(email, name, password));\r\n    } else {\r\n      setMessage(\"Passwords does not match.\");\r\n    }\r\n  };\r\n\r\n  let content = <Loader />;\r\n  if (!user && !loading) {\r\n    history.push(\"/login\");\r\n  } else {\r\n    content = (\r\n      <Row>\r\n        <Col md={3}>\r\n          {error && !loading && <Message variant=\"danger\">{error}</Message>}\r\n          {message1 && <Message variant=\"danger\">{message1}</Message>}\r\n          {message && <Message variant=\"success\">{message}</Message>}\r\n          <h1>User Profile</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update Profile\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h2>My orders</h2>\r\n          {loadingOrder ? (\r\n            <Loader />\r\n          ) : errorOrder ? (\r\n            <Message variant=\"danger\">{errorOrder}</Message>\r\n          ) : (\r\n            <Table bordered hovered striped responsive className=\"table-sm\">\r\n              <thead>\r\n                <tr>\r\n                  <td>ID</td>\r\n                  <td>Date</td>\r\n                  <td>Total</td>\r\n                  <td>Paid</td>\r\n                  <td>Delivered</td>\r\n                  <td></td>\r\n                </tr>\r\n              </thead>\r\n              {orders.map((i) => (\r\n                <tr key={i._id}>\r\n                  <td>{i._id}</td>\r\n                  <td>{i.createdAt.substring(0, 10)}</td>\r\n                  <td>{i.totalPrice}</td>\r\n                  <td>\r\n                    {i.isPaid ? (\r\n                      i.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {i.isDelivered ? (\r\n                      i.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${i._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return <Fragment>{content}</Fragment>;\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}