{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\ECommerce-MERN\\\\frontend\\\\src\\\\screens\\\\UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { deleteUser, getUsers } from \"../actions/user\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst UserListScreen = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const {\n    loading,\n    error,\n    users\n  } = user;\n  const auth = useSelector(state => state.auth);\n  const {\n    user: userInfo\n  } = auth;\n  useEffect(() => {}, [dispatch, history, userInfo]);\n  useEffect(() => {\n    return () => {\n      if (!userInfo || !userInfo.isAdmin) {\n        history.push(\"/\");\n      }\n    };\n  }, []);\n\n  const deleteHandler = user => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteUser(user));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), users.map(i => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check\",\n            style: {\n              color: \"green\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\",\n            style: {\n              color: \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n            to: `/admin/users/${i._id}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              className: \"btn-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            className: \"btn-sm\",\n            onClick: () => deleteHandler(i),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, i._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserListScreen, \"rdK4v4QRR0JWxY1bmydD9qqw9Ws=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/screens/UserListScreen.js"],"names":["React","useEffect","Fragment","Button","Table","useDispatch","useSelector","LinkContainer","deleteUser","getUsers","Loader","Message","UserListScreen","history","dispatch","user","state","loading","error","users","auth","userInfo","isAdmin","push","deleteHandler","window","confirm","map","i","_id","name","email","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { deleteUser, getUsers } from \"../actions/user\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const { loading, error, users } = user;\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n  const { user: userInfo } = auth;\r\n\r\n  useEffect(() => {\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (!userInfo || !userInfo.isAdmin) {\r\n        history.push(\"/\");\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const deleteHandler = (user) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteUser(user));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <td>ID</td>\r\n              <td>Name</td>\r\n              <td>Email</td>\r\n              <td>Admin</td>\r\n              <td></td>\r\n            </tr>\r\n          </thead>\r\n          {users.map((i) => (\r\n            <tr key={i._id}>\r\n              <td>{i._id}</td>\r\n              <td>{i.name}</td>\r\n              <td>{i.email}</td>\r\n              <td>\r\n                {i.isAdmin ? (\r\n                  <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                ) : (\r\n                  <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <LinkContainer to={`/admin/users/${i._id}`}>\r\n                  <Button variant=\"light\" className=\"btn-sm\">\r\n                    <i className=\"fas fa-edit\"></i>\r\n                  </Button>\r\n                </LinkContainer>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  className=\"btn-sm\"\r\n                  onClick={() => deleteHandler(i)}\r\n                >\r\n                  <i className=\"fas fa-trash\"></i>\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </Table>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n"]},"metadata":{},"sourceType":"module"}