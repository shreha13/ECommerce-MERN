{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\GitHub\\\\ECommerce-MERN\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getProfile, updateUserProfile } from \"../actions/auth\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const {\n    error,\n    loading,\n    user,\n    userProfile\n  } = auth;\n  useEffect(() => {\n    if (userProfile) {\n      setName(userProfile.name);\n      setEmail(userProfile.email);\n    } else {\n      dispatch(getProfile());\n    }\n  }, [userProfile, dispatch, getProfile]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    debugger;\n\n    if (password === confirmPassword) {\n      setMessage(null);\n      dispatch(updateUserProfile(email, name));\n    } else {\n      setMessage(\"Passwords does not match.\");\n    }\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 17\n  }, this);\n\n  if (!user && !loading) {\n    history.push(\"/login\");\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [error && !loading && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"My orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProfileScreen, \"OL2XHu5ESiwe3khpePJ/M1cslkM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/GitHub/ECommerce-MERN/frontend/src/screens/ProfileScreen.js"],"names":["React","Fragment","useEffect","useState","Button","Col","Form","Row","useDispatch","useSelector","Link","getProfile","updateUserProfile","Loader","Message","ProfileScreen","location","history","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","auth","state","error","loading","user","userProfile","submitHandler","e","preventDefault","content","push","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProfile, updateUserProfile } from \"../actions/auth\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(null);\r\n  const [confirmPassword, setConfirmPassword] = useState(null);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const { error, loading, user, userProfile } = auth;\r\n\r\n  useEffect(() => {\r\n    if (userProfile) {\r\n      setName(userProfile.name);\r\n      setEmail(userProfile.email);\r\n    } else {\r\n      dispatch(getProfile());\r\n    }\r\n  }, [userProfile, dispatch, getProfile]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    debugger;\r\n    if (password === confirmPassword) {\r\n      setMessage(null);\r\n      dispatch(updateUserProfile(email, name));\r\n    } else {\r\n      setMessage(\"Passwords does not match.\");\r\n    }\r\n  };\r\n\r\n  let content = <Loader />;\r\n  if (!user && !loading) {\r\n    history.push(\"/login\");\r\n  } else {\r\n    content = (\r\n      <Row>\r\n        <Col md={3}>\r\n          {error && !loading && <Message variant=\"danger\">{error}</Message>}\r\n          {message && <Message variant=\"danger\">{message}</Message>}\r\n          <h1>Sign Up</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update Profile\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n          <h2>My orders</h2>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return <Fragment>{content}</Fragment>;\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}